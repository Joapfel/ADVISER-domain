# Issue:
# slot value != 'na'

# ----------------------------System Welcome-------------------------------#

template welcomemsg(): "Hey, nice to meet you! I'm here to help you search for courses on Campus! :)"
template welcomemsg(help): "Hmm... I don't get it. Cam you say it again please?"
template welcomemsg(more) : "I'm happy to assist if you still have more questions :)"
template bad() : "Sorry, your question is too complicated. Can you say it again in another way?"
template closingmsg() : "Bye bye, I hope you find my service useful."


# --------------------System Recommendation/Inform--------------------------#
# InformByName: Propose an entity to the user
# InformByAlternatives: Propose an alternate entity if the user isn't satisfied with the first

# -------------------------Only Name Slot-----------------------------------#

template inform_byname(title)
	"I found this course: {title}. I can tell you more if you are interested."

	special_case title = "none"
		"No such course is found in my database."


template inform_alternatives(title)
	"What about the course: {title}?"

	special_case title = "none"
		"It seems that no alternative course is found."


#------------------------ Name Slot + Slots----------------------------------#

template inform_byname(title, *slots)
	"The course {title} {for_entry(slots, "info", ", it ", " and it ", title)}."

	special_case title = "none"
		"Unfortunately, I found no course which {for_entry(slots, "info", ", ", " and ", title)}."

template inform_alternatives(title, *slots)
	"The course {title} also {for_entry(slots, "info", ", it ", " and it ", title)}."

	special_case title = "none"
		"Unfortunately, I found no other course which also {for_entry(slots, "info", ", ", " and ", title)}."


# ----------- RULES --------------- #
# Rules for System Inform

function info(slot, value, title)

    # binary slots either are or are NOT something
    if value = "true": "is about {slot}"
    if value = "false": "is not about {slot}"
    if value = "na": "contains no information about {slot} on Campus"

	# textual slots
	if slot = "lecturers": "is taught by {capitalise_lecturer(title, value)}"
	if slot = "semester": "is offered in \"{value}\""
	if slot = "start_date": "start on {value}"
	if slot = "end_date": "ends on {value}"
	if slot = "semester_hours": "requires around {value} hours from you per week"
	if slot = "ilias_link": " on ilias is at {value}"
	if slot = "description": "has the following description: \"{value}\""
	if slot = "objective": "has the following objective: \"{value}\""
	if slot = "prerequisite": "asks you the following requirements: \"{value}\""
	if slot = "institution": "is offered by {value}"
	if slot = "extra_info": "contains some extra information: \"{value}\""
	if slot = "language_taught": "is offered in {value}"

	# other set slots
	if slot = "type"
		if value = "Additional Course": "is an additional course"
		if value = "Advanced Seminar": "is a seminar course but at advanced level"
		if value = "Colloquium": "is a colloquium"
		if value = "Course": "is just a normal course"
		if value = "Design": "on Campus says 'design' but I'm not sure what's that"
		if value = "Exercise": "focuses on exercises than theories"
		if value = "Field Trip": "is a field trip"
		if value = "Graduate Seminar": "is a seminar for graduates"
		if value = "Introduction to Scientific Methodology": "teaches you scientific methodology"
		if value = "Introductory Seminar": "is an introductory seminar"
		if value = "Lecture": "is delivered via lectures"
		if value = "Lecture Exercise": "is delivered via lectures plus some exercises"
		if value = "Lecture with Exercises": "is delivered via lectures plus some exercises"
		if value = "Practical Training": "focuses on practical training"
		if value = "Project Seminar": "is a seminar but with a project at the end of the course"
		if value = "Propaedeutic": "is an introductory course to your field of studies"
		if value = "Registration without Re-Registration": "on campus shows: {value}"
		if value = "Seminar": "is just a normal seminar course"
		if value = "Thesis": "involves your graduation thesis"
		if value = "Tutorial": "is a tutorial"
		if value = "Working Group": "asks you to work in groups"
		if value = "Workshop": "is a workshop"
		if value = "blended learning": "involves blending learning"

	# "is {either_or(value, "", "not ")}about {slot}"

function either_or(boolean, if_true, if_false)
	if boolean = "true": "{if_true}"
	if boolean = "false": "{if_false}"

function capitalise_lecturer(title, lecturer)
	"{title.cap_lecturer}"
	if title = "none": "{lecturer}"


# ---------------------------System Request----------------------------------#
# Request: Ask for more information from the user

template request(type)
	"How do you want the course to be taught?"

template request(language_taught)
	"What language should the course be taught in?"

#template request(institution)
#	"Which institution or department offers the course?"
#template request(lecturers)
#    "Do you know who teaches the course?"
#template request(semester_hours)
#    "How many hours do you plan to spend on the course every week?"

# ---------------------------System RequestMore------------------------------#
# Ask the user if there is anything else the system can provide

template reqmore()
	"Can I help you with anything else?"

template reqmore(lecturers)
	if lecturers = "dontcare"
		"Are you okay with a course taught by anyone?"

template reqmore(semester_hours)
	if semester_hours = "dontcare"
		"I take it that you are willing to put as many hours as needed for the course?"

template reqmore(language_taught)
	if language_taught = "dontcare"
		"I'll look for courses offered in any language then. Okay?"

template reqmore(type)
	if type = "dontcare"
		"So, you don't have any preferences in the type of courses, do you?"

template reqmore(institution):
	if institution = "dontcare"
		"Does it mean I should look for courses offered in any institution?"


# ----------------------------System Confirm----------------------------------#
# Confirm: Ask the user to confirm a proposed value for a slot

template confirm()
	"Can you be more specific about the course you're looking for?"

template confirm(*slots)
	"Okay, so the course you are looking for contains these information: {for_entry(slots, "info", ", ", " and ", "none")}, right?"


# ---------------------------System Select----------------------------------#
# Select: Provide the user with 2 or 3 options and ask the user to select the correct one

template select(*slot)
	"Which course do you prefer {for_entry(slot, "info_or_dontcare_list", "", "")}?"

function info_or_dontcare_list(slot, value_list)
	"{for(value_list, "info_or_dontcare", ", ", " or ", slot)}"

function info_or_dontcare(value, slot)
	"which {info(slot, value, "none")}"
	special_case value = "dontcare": "you don't care"


